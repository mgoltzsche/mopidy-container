apiVersion: apps/v1
kind: Deployment
metadata: # kpt-merge: /mopidy
  name: mopidy # kpt-set: ${name}
  annotations:
    internal.kpt.dev/upstream-identifier: 'apps|Deployment|default|mopidy'
spec:
  template:
    spec:
      initContainers:
      - name: init-snapfifo
        image: alpine:3
        command:
        - /bin/sh
        - -c
        - "[ -p /snapserver/snapfifo ] || mkfifo -m 640 /snapserver/snapfifo"
        volumeMounts:
        - name: snapfifo
          mountPath: /snapserver
      containers:
      - name: snapserver
        image: ghcr.io/mgoltzsche/snapcast-server:0.3.0
        imagePullPolicy: IfNotPresent
        env:
        - name: SNAPSERVER_SOURCE
          value: pipe:///snapserver/snapfifo?name=default&mode=read
        - name: MOPIDY_SNAPCAST_PORT
          value: "8080"
        resources:
          limits:
            cpu: 200m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
        ports:
        - containerPort: 1780
        - containerPort: 1705
        - containerPort: 1704
        livenessProbe:
          httpGet:
            path: "/"
            port: 1780
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: "/"
            port: 1780
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 2
          initialDelaySeconds: 1
        securityContext:
          runAsGroup: 4242
          runAsUser: 4242
        volumeMounts:
        - name: snapfifo
          mountPath: /snapserver
        - name: snapserver-state
          mountPath: /var/lib/snapserver
      - name: app
        env:
        - name: MOPIDY_OUTPUT_PIPE
          value: /snapserver/snapfifo
        volumeMounts:
        - name: snapfifo
          mountPath: /snapserver
      volumes:
      - name: snapfifo
        emptyDir: {}
      - name: snapserver-state
        emptyDir: {}
